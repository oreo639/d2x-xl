<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAADLqkAAzKlAAA0qAAANqoAADerAAA5rQAAOq4AATuvAAI8sAAAPbIAAz2yAAA+swAEPrMAAD+0AAU/
        tAAAQLYAB0C1AABBtwAIQbYAAEK4AAlCuAAAQ7kACkO5AABEugAMRLoACUa1AABHtwANRbsAC0e3AABI
        uAAUR7UADka9AAxIuAABSbkAFUi2AAVIvwANSbkAFkm3AAJKuwAPSroABEu8ABdKuQAMTbYABUy9ABBM
        uwAOTrcABk2+ABFNvQAPT7gACE6/ABJOvgAQULkACU/BABNPvwARUboAC1DCABVQwAATUrwADFHDABZR
        wgAUU70ADlLEABdSwwAVVL4AGFPEABZVvwAPVMYAGVTFABBVxwAaVcYAElbIABtWyAAcV8kAGlnEABRY
        ywAiWcQAHVjKABtaxQAVWcwAHlnLAB1bxgAXWs0AH1rNAB5cyAAYW84AIFvOAB9dyQAZXM8AIVzPACFf
        ywAjXtIAImDNACRf0wAjYc4AJWDUACRizwAmYdUAJWPQACZk0QAtZNEAJ2XTAC5l0gAoZtQAKWfVADBn
        1QAqaNYAMWjWACtp2AAyadcALGrZADNq2AAxbNMALWvaADRr2gAubNsANWzbADNu1gA2bdwANG/XADdu
        3QA1cNgANnHZADdy2wA4c9wAQnbQAEl2zwA5dN0AOnXeADt23wBLedMAPHfhAEx61AA9eOIATXvVAD55
        4wBDe90ATnzXAD965ABPfdgAQHvlAFB+2QBBfOcAQn3oAE1/4QBIgOMARH/qAEmB5ABThNgARYDsAEWE
        6QBRheIAUoTnAFKG4wBThekAXYjcAE6G6wBYid4AVIbqAFOI5ABVh+sAVInmAFWK5wBWi+gAV4zpAFiN
        6gBdj+UAWY7sAFqP7QBfkegAWpDuAFuR7wBhk+oAXJLxAGOS8ABdk/IAXpTzAGWU8gBklu4AX5X0AGmY
        5wBglvUAZ5f2AGaZ8ABimPgAZ5rxAGmZ+ABom/MAaZz0AGqd9QBrnvYAbJ/3AG2g+QBuofoAb6L7AAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAfZOTgYGTk2+afZOBk4iFfXiagYGBk4WTfJyBk32TgYwQBgUPEAYIXqcFBw8PDw8FhEUaCQ8Q
        BggQrAAPAwgPCBs4NywbMSBcmBksHyQ4GRKNTCsIOBIfGjeyEiwZOA8QSUZMRVE4Q2KiOExDRT5MOIdj
        TExGQ0ZMPq0sTz1MLDq4wZq9n7PBscG8sbqxuLy8uMC4vLitvLO/q7a8sa2xviwpOB6HSyIeKS0pOIZL
        Ih5BM0sgLKstJykzSzMzY5YeGRkFD4cnGQUPGhIIh0kGGhoPExMZug8IGRIIBRBYlwkfMSwshFlFJEEf
        LCGLQzhDOEE+QS6tLDE9KCw4IWegPmhrbluHeGxpb2NvZpB1b3dlZmpvcLVpcWxsaGtnaqdmh4d/h4l5
        jm95jnh5e4d/dG15lICHiYSCgMK4wsLCrcIFBRUPBQEBWZ8FBgcIAxoFhzkQCAUFCAcZwsLCwsLCwhka
        JxkbExlkmBsQHRUQEgmUPhcrFRMSLDHCwsLCwsLCSTdFQE8xO1GfQ0BMQExBOHlWRU1PO0MxI8LCwsLC
        wsKXn6GnoqOfuryYpqejp5+stbqiraOip6KgwsLCwsLCwmJWWU+GWEVJT19XU11ba1ZhX15PWMLCwsLC
        wsLCwsLCBggIWJgJCAcQBgMFgjgQEggHAQghwsLCwsLCwsLCwsIVGzpilg8nMR0dHxmRQywsKxcoMTHC
        wsLCwsLCwsLCwlBWRWCfT09MTEw9H4RdQ1FaRU9DOMLCwsLCwsLCwsLCtaensqenp6enrbWwsrCtrKan
        sba2s8LCwsLCwsLCwsIdOwgkIBkZRqATFx0hIRkGeykYOTw5Py1kwsLCwsLCwg8HIxAIBw9eoQcZGRkQ
        Bwh/QBkaEhIQCMLCwsLCwsLCLD5JMSsoJ1OjKDEsMT4nFYdQRj4sPTgba8LCwsLCwsJnYnlub2NveKJj
        Y3dlc2JbknRoaG5kcWSLwsLCwsLCwpB5f22GlXF0eYaAeXLCuMK/wqjCwMK9wrzCwsLCwsLCBQcFWpgD
        ABkIAwgIwsLCwsLCwsLCwsLCwsLCwsLCwsIQGjhljwcZFxcPEgeJwsLCwsLCwsLCwsLCwsLCwsLCwjhG
        Q1aiO0VMQUU+MWTCwsLCwsLCwsLCwsLCwsLCwsLCsqOjrreno6edpqamssLCwsLCwsLCwsLCwsLCwsLC
        wsJbYFNgRU1ZWMLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwgUZBQgFEgZhwsLCwsLCwsLCwsLCwsLCwsLC
        wsLCwsLCIScxOzEZJFnCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsJPXDtPRVo3Z8LCwsLCwsLCwsLCwsLC
        wsLCwsLCwsLCwgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF0AAAB/AAAAfwAA
        AH8AAAB/AAAH/wAAB/8AAAf/AAAH/wAAA/8AAAB/AAAA/wAAAH8AAAB/AAVVfwAP//8AB///AAf//wAH
        //8A////AP///wD///8A////
</value>
  </data>
</root>