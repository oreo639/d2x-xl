<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA
        AAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAABAAA
        AAcAAAALAAAADQAAABAAAAARAAAAEgAAABEAAAAQAAAADQAAAAsAAAAHAAAABAAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABNTU0FKysrCQAA
        AA0AAAAXAAAAIQAAACkAAAAvICAgQWhoaMR5eXn8a2tr4l1dXagrKytFAAAAKQAAACEAAAAXAAAADQAA
        AAYAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2dnYaeHh5ZX5+
        fsx5eXnkampqpRYWFkEAAABAAAAARAAAAEdiYmKyc3Nz/4CAgP9zc3P/Y2Nj/1NTU+kkJCRZAAAAQAAA
        ADgAAAAsAAAAHQAAAA8AAAAFAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAenp6LnNz
        c+x6eXr/gICA/3p5ev9wcHD/Z2dnzQcHB08AAABNNDQ0bGhoaP1zc3P/gICA/3Nzc/9jY2P/VlZW/zg4
        OHQAAABMAAAASgAAAEUAAAA8AAAAKwAAABgAAAAJAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAJqamo1cXFx/Xl5ev+AgID/enp5/3BwcP9nZ2b/ZWZm12JiYqdtbW3kY2Nj/3Nzc/+AgID/c3Nz/2Nj
        Y/9WVlb/Dw8PVwAAAE0AAABNAAAATQAAAEsJCQlHAAAANAAAAB4AAAALAAAAAgAAAAAAAAAAAAAAAAAA
        AAAAAAABAAAACAAAAB1xcXH5enp6/4CAgP95eXr/cHBw/2ZmZv9cXVz/VlZW/1ZWVv9jY2P/c3Nz/4CA
        gP9zc3P/Y2Nj/1ZWVv8+Pj55IiIiXj8/P3hhYWG4c3Ny53p6evBzc3PLOzs7VQAAAB0AAAAIAAAAAQAA
        AAAAAAAAmJiYM4qKiSQAAAAVAAAAMW9vcPZ6eXr/gICA/3p6ev9wcHD/ZmZm/1xcXf9WVlb/VlZW/2Nj
        Y/9zc3P/gICA/3Nzc/9jY2P/VlZW/19fX/pnZ2jxaGlo/29vb/92dnb/fHx8/4CAgP9/f3/6Z2dniwAA
        ABUAAAAEgICAB4uLi8Ofn5//lpaW/4iHiPZ4eHjacXFy+3l6ef+AgID/eXl6/3BwcP9mZmX/XV1c/1ZW
        Vv9WVlb/ZWVl/3l5ef+AgID/eXl5/2xsbP9bW1v/Wlpa/2BgYP9nZ2j/b25v/3Z2dv98fHz/gICA/4CA
        gP95eXneAAAAIwAAAAiFhYWWlpaV/5+fn/+WlZb/iomJ/4CAgP9ycnL/e3t7/4CAgP9+fn3/dnZ3/2dn
        Z/9cXFz/VlZW/1ZWVv9xcXH/o6Oj/729vf+rqqv/nJ2d/4aGhv9gYGD/YGBg/2doZ/9vb2//dnZ1/3x8
        fP+AgID/gICA/3h4eN8AAAAvAAAADYmJifyWlZb/n5+f/5aWlv+JiYn/gICA/4GBgf+kpKT/nJyc/5+f
        n/+YmJj/dnZ2/11eXv9WVlb/XV1d/4yMjP/s7Oz/5ubm/93c3f/c29v/kJCQ/2FhYf9hYGD/aGdn/29v
        bv92dXb/fHx7/4CAgP+AgID/eHh43wAAADUAAAAQiYmJ9paWlv+fn5//lZWW/4mJif+AgID/ioqK/+fn
        5/+6urn/vLy7/7u7u/+mpqb/dXV1/2tra/+Ghof/0dHR/+Pj4//d3d3/4eHh/9jY2P97e3v/Wlta/2Bg
        Yf9nZ2f/b25v/3Z2dv97fHz/gICA/4CAgP94eHjfAAAANQAAABCKiYnwlpaW/5+fn/+Vlpb/iYmJ/4CA
        gP+AgID/wMDA/8vLy//Av8D/w8PD/8fHx/+xsLD/qKio/8PCw//a2tr/3d7e/+Lj4v/m5ub/09PT/4+P
        j/9iYmL/Y2Rj/2xsbP90dHX/e3t7/4CAgP+AgID/gICA/3l5eeADAwMwAAAADYqJifCWlpb/nZ2d/5aW
        lv+KiYn/gICA/4CAgP+Ojo7/z8/P/8TEw//IyMj/zMzM/9DR0f/V1dX/2tra/9/f3v/j4+P/5+fn/+rq
        6v/q6uv/1tbW/5GQkP+EhIT/lJSU/6Kiov+vr6//sbGx/5GQkf+AgID/fn5+9REREScAAAAIiYmJ8IiI
        iP+Li4v/hoaG/4ODg/+AgID/jY2N/6ysrP+/v8D/ycjI/83Nzf/U1NT/5ubm//T09P/8/Pz//fz8//j4
        +P/y8vP/7u7u/+3t7f/o6Oj/19fX/83MzP/b3Nv/2djZ/9bX1v/R0dH/vLy8/4CAgP92dnXkAAAAFQAA
        AASFhYb2lZWV/6mpqf+qqqr/qKio/6Ojo/+srKz/v7+//8nJyf/Ozs3/1NTU/+Dg4P/a29r/u7u7/7a2
        tv/Ozs7/7e3t///////39/f/6+zs/+bm5//j4+P/3t7f/9rb2v/U09P/xcTF/6SkpP+Ghob/dXV1/29v
        cMEAAAAIAAAAAYGBge7Kysr/2tra/83Nzf/AwMD/wsLC/8bFxv/Kysr/zs7P/9PT0//Y2Nj/1NXU/6ur
        q/9jY2P/WVlZ/2VlZf93d3f/0tLS//7+/v/x8fH/4uLi/93e3v/Z2tn/09PS/8TExP6hoaH8b29v/2Zn
        Z/9ra2v/cHFwqQAAAAIAAAAAgICAYImIiPKampr/yMnJ/+3t7f/c3Nz/y8vL/8/P0P/U1NP/2dnZ/93d
        3f+urq7/VVVV/zIzM/8+Pz7/TUxM/1dXV/9jZGP/2dna//b29v/d3d3/2djY/9PU1P/Ly8v/p6eo/nBw
        cP9cXFz/YmJi/2tra/9yc3OmAAAAAAAAAAAAAAAAmJiZxpmZmf+Pj4//lZWV/+Tj5P/c3Nz/1dTV/9nZ
        2v/e3t7/29vb/5SUlP89PT3/MTAw/z4+P/9MTU3/VlZW/1lZWf+wsLD//v7+/9jX2P/T09P/zs7P/8nK
        yv/AwMD/oqKi/3p6ev9ycnP/cXFx/3V1daqAgIABAAAAAAAAAACbmpvDn5+f/5ubm/+Pj4//paWl//n5
        +f/a2tr/397e/+Li4//k4+P/wsLC/39/f/9CQ0P/Q0ND/1BPUP9eXl7/g4OD/7++v//19fX/0tLS/87N
        zv/Jycn/xcXF/8HBwf+5uLn/r66v/5+fn/+QkJD/f39/5YCAgAUAAAAAAAAAAJuamsOcnJz/kpOS/6Ki
        ov/v7+//8vLy/9/f4P/k5OP/5+fn/+rq6v/q6ur/xcXF/5KTkv97e3v/eHd3/4yMjP+8vLz/4ODg/+bm
        5v/Nzc3/yMjJ/8TExf+9vr7/urq6/7q7u/+5ubn/ubm5/6qqqv9+fX7rAAAAAAAAAAAAAAAAkJCQ1o+P
        j//AwMD/9PT0/+jo6P/g4OD/5OTk/+jo6P/r6+v/7u7u/+zt7P/q6ur/3d3e/9HQ0f/FxcX/zc3N/9TV
        1P/h4eH/0NDQ/8fIx//DxMT/s7S0/5eXl/+NjY38kJCQ/5WVlf+Xl5f+jY2N+n9/fz8AAAAAAAAAAICA
        gAGFhoW5zs7O/+/v7//d3d7/4ODg/9zd3f/Z2Nn/0dLR/+Tk4//s7e3/6enp/+Xm5v/i4uL/3d7e/9nZ
        2f/V1dX/2dnZ/8/Ozv/Hx8f/w8PD/7O0tP+Uk5T/eHh4/2pqasWAgIBHgICAX4CAgGmAgIBJAAAAAAAA
        AAAAAAAAAAAAAICAgCGjoqLq4eHh/8DAwP+wsLD9nJyc74+Pj9yOjo7S1tXV//X29v/m5eX/4eHh/93d
        3f/Z2dj/0tLS/8nJyf/Lysv/xsbG/8PCwv+/v77/tra2/4eHh/9hYWH/YWBgtAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAICAgDaKioqsioqKrYCAgHeAgIA/gICAHoODg0WOjo7/6Ojo/+Pj
        4//c3dz/2NjY/9HR0f+qqqv9mZmZ86uqq//d3t7/09PT/7u7vP+5ubn/paWl/3Rzc/9hYWG1AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICAgBGAgIAQAAAAAAAAAAAAAAAAgICAL4KC
        gv/q6ur/29zc/9fX1//S09L/qqmp/4WFhY6AgIBShISEmqOjo//i4uL/0tLS/7m5uf+2trb/j4+P/m1u
        baoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACAgIBVk5OT/vHy8v/V1dX/0dLR/8DAwP+Dg4PXgICACgAAAACAgIAKgYGBiZaWlva/v7//tLS0/5GR
        kfWGhobZfX19SYCAgAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAICAgCOBgYGblJSU1J2dne+VlZX/j4+P3ICAgEsAAAAAAAAAAAAAAACAgIACgICAX4eH
        h7GHh4e7gICASICAgBcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAgIAPgICALICAgEeAgIAugICAAgAAAAAAAAAAAAAAAAAA
        AAAAAAAAgICAFYCAgBYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//gD///AAH//AAAf/AAAB/gAAAPwAAAB4AAAAMAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAADgAAAAYAAAAGAAAADgAAAAwAAAAeAAAB/wAAAf+cA
        AH//AIA//wHA///B8/////////////////8=
</value>
  </data>
</root>