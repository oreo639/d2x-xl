//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DLE.NET.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DLE.NET.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        internal static System.Drawing.Bitmap addcube {
            get {
                object obj = ResourceManager.GetObject("addcube", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap addyndlight {
            get {
                object obj = ResourceManager.GetObject("addyndlight", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap alignall {
            get {
                object obj = ResourceManager.GetObject("alignall", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap alignchildren {
            get {
                object obj = ResourceManager.GetObject("alignchildren", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap aligndown {
            get {
                object obj = ResourceManager.GetObject("aligndown", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap alignup {
            get {
                object obj = ResourceManager.GetObject("alignup", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap blockmode {
            get {
                object obj = ResourceManager.GetObject("blockmode", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap checkmine {
            get {
                object obj = ResourceManager.GetObject("checkmine", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap cubemode {
            get {
                object obj = ResourceManager.GetObject("cubemode", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap cubetool {
            get {
                object obj = ResourceManager.GetObject("cubetool", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap deldynlight {
            get {
                object obj = ResourceManager.GetObject("deldynlight", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap extendcube {
            get {
                object obj = ResourceManager.GetObject("extendcube", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap fitview {
            get {
                object obj = ResourceManager.GetObject("fitview", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap fullscreen {
            get {
                object obj = ResourceManager.GetObject("fullscreen", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap horzflip {
            get {
                object obj = ResourceManager.GetObject("horzflip", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap joinlines {
            get {
                object obj = ResourceManager.GetObject("joinlines", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap joinpoints {
            get {
                object obj = ResourceManager.GetObject("joinpoints", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap joinsides {
            get {
                object obj = ResourceManager.GetObject("joinsides", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap lighttool {
            get {
                object obj = ResourceManager.GetObject("lighttool", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap linemode {
            get {
                object obj = ResourceManager.GetObject("linemode", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap mirrorcube {
            get {
                object obj = ResourceManager.GetObject("mirrorcube", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap movedown {
            get {
                object obj = ResourceManager.GetObject("movedown", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap moveleft {
            get {
                object obj = ResourceManager.GetObject("moveleft", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap moveright {
            get {
                object obj = ResourceManager.GetObject("moveright", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap moveup {
            get {
                object obj = ResourceManager.GetObject("moveup", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap objectmode {
            get {
                object obj = ResourceManager.GetObject("objectmode", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap objecttool {
            get {
                object obj = ResourceManager.GetObject("objecttool", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap openfile {
            get {
                object obj = ResourceManager.GetObject("openfile", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap pointmode {
            get {
                object obj = ResourceManager.GetObject("pointmode", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap preferences {
            get {
                object obj = ResourceManager.GetObject("preferences", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap redraw {
            get {
                object obj = ResourceManager.GetObject("redraw", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap resetaligment {
            get {
                object obj = ResourceManager.GetObject("resetaligment", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap resetmarked {
            get {
                object obj = ResourceManager.GetObject("resetmarked", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap savefile {
            get {
                object obj = ResourceManager.GetObject("savefile", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap shrinkhorz {
            get {
                object obj = ResourceManager.GetObject("shrinkhorz", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap shrinkvert {
            get {
                object obj = ResourceManager.GetObject("shrinkvert", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap sidemode {
            get {
                object obj = ResourceManager.GetObject("sidemode", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap splitlines {
            get {
                object obj = ResourceManager.GetObject("splitlines", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap splitpoints {
            get {
                object obj = ResourceManager.GetObject("splitpoints", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap splitscreen {
            get {
                object obj = ResourceManager.GetObject("splitscreen", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap splitsides {
            get {
                object obj = ResourceManager.GetObject("splitsides", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap stretchtofit {
            get {
                object obj = ResourceManager.GetObject("stretchtofit", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap texturetool {
            get {
                object obj = ResourceManager.GetObject("texturetool", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap vertflip2 {
            get {
                object obj = ResourceManager.GetObject("vertflip2", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap walltool {
            get {
                object obj = ResourceManager.GetObject("walltool", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap xrotleft {
            get {
                object obj = ResourceManager.GetObject("xrotleft", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap xrotright {
            get {
                object obj = ResourceManager.GetObject("xrotright", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap yrotleft {
            get {
                object obj = ResourceManager.GetObject("yrotleft", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap yrotright {
            get {
                object obj = ResourceManager.GetObject("yrotright", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap zoomin {
            get {
                object obj = ResourceManager.GetObject("zoomin", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap zoomout {
            get {
                object obj = ResourceManager.GetObject("zoomout", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap zrotleft {
            get {
                object obj = ResourceManager.GetObject("zrotleft", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap zrotright {
            get {
                object obj = ResourceManager.GetObject("zrotright", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
