<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        GP+qWQn/o04S/4wqMf+SMSr/jy4t/6RRD/+lUg7/ok0S+48uLf+OKy+ZjSoxAP/AQQD/wEKe/8FE///C
        R/r/wkf//sBE///BQv/Nhxn/97xJ///OZv/+0HH//89r//vDU//Ohxn//b4+///BQ//8v0b//8tI/8yA
        Pf+JJir/jywx/5k+H/+uYAP/mT8f/40qMP+RMir/pFAQ/44sLv+eRhn6plMO/5g9IZqaPyAA/8JHAP/C
        R5j/wkb//8BC+//AQP/+wkf//8te/8+OKf/3xmb//81i//7CSv//wEH/+rw//82IGv/+wEX//sJH//u9
        Qf/+yUH/yn08/4glK/+SMS3/lDUn/6VRD/+jTxD/oUsU/5AvLP+kTxH/kjEq/40pMfuYPCL/pE8SeaZT
        EQD/vz8A/8BBnv/AQ///xlP6/81p//7Rc///z2n/zoog//e3PP//wkL//sBD//7CR//7vkT/zoga//29
        Pv//wEL//8VR///Ya//TkU7/iCQp/48uMP+WOST/ok0S/4wpMv+fSBf/p1UL/6ZSDv+OLC7/kTEr+48u
        Lv+OLDCWjiswAP/MZgD+y2V+/89v///Pbvv/yFr//sJH///BQf/Nhxr/9rlA///ESP/9wUX//sBC//q7
        PP/Nhhn//81d//3ObP/wwF3/3qY1/9OVD/+3axb/kC8w/5Q1Jv+jTxH/jiwu/40rMP+YPCH/r2AC/5pA
        Hv+NKzD6kTAs/5IxK5qSMSsA/8hZAP7IWYX/xE7//8BB+//AQf/9wET//8NI/86IHP/2tz3//sFB//7A
        Q///yFb//9Fr/8yKJv/UmTj/2J4h/8uJAv/LiAH/zowJ/9KTBP+9cwn/nUQb/6FMFf+OLS7/kTEr/5Av
        LP+lUg//pVIO/6JME/uPLS3/jiwvmo0qMAD/wEEA/8BCnv/BRP/+wkf6/sJH//3ARf/+wEH/zYcZ//q/
        Sf//z2X/+81r/+28Vv/boy7/z48N/7huAP+7cwP/0JAN/86NB//KhwD/0ZIU/+OtOP/uwVr/uG0z/4gj
        K/+RMS3/kjQp/6RQEf+OLC//n0gX+6VSDv+XOyOZmD0iAP/CSAD+wkeZ/sJH//7AQvv+vz///8JG///P
        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
        AA/+AAB//wAB///AB///4D////H///////8=
</value>
  </data>
</root>